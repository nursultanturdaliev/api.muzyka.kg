<?php

namespace AppBundle\Repository;

use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\EntityRepository;

/**
 * ArtistRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArtistRepository extends EntityRepository
{
	public function getInfo()
	{
		return array(
			'count' => $this->createQueryBuilder('artist')
							->select('count(artist.id)')
							->getQuery()
							->getSingleScalarResult()
		);
	}

	public function songAlreadyExists($artistName, $title)
	{
		$data = $this->createQueryBuilder('artist')
					 ->where('artist.name = :name')
					 ->andWhere('artist.songs.title = :title')
					 ->setParameter('name', $artistName)
					 ->setParameter('title', $title)
					 ->getQuery()
					 ->execute();
		return sizeof($data) > 0;
	}

	public function search($text)
	{
		return $this->createQueryBuilder('artist')
			->select('artist.slug')
			->addSelect('artist.name')
			->addSelect('artist.profileLocal')
			->addSelect('artist.lastname')
			->addSelect('artist.gender')
			->where('lower(artist.name) LIKE lower(:text)')
			->orWhere('lower(artist.lastname) LIKE lower(:text)')
			->setParameter('text', '%' . $text . '%')
			->setFirstResult(0)
			->setMaxResults(7)
			->getQuery()
			->execute(null, AbstractQuery::HYDRATE_SCALAR);
	}
}
